#!/usr/bin/python3

import multiprocessing
import os
import re
import subprocess
import sys
import util

HOME = os.path.expanduser("~")
TEST_USER_PROFILE_PATH = os.path.join(HOME, "tmp", "test-chromium")

from optparse import OptionParser

# Options

parser = OptionParser()
parser.add_option("-v", "--verbose", dest="verbose",
                  action="store_true",
                  help="show verbose messages")
parser.add_option("-d", "--dryrun", dest="dryrun",
                  action="store_true",
                  help="dry run, log what we plan to do but don't actually do anything")
parser.add_option("-t", "--tests_only", dest="testsonly",
                  action="store_true",
                  help="Only build unit tests")
parser.add_option("-f", "--full", dest="full",
                  action="store_true",
                  help="Build all the targets that we know about")

(options, args) = parser.parse_args()

os.chdir(os.path.join(HOME, "chromium", "src"))
cmd = "gn gen " + util.get_out_dir() + " --args='" + " ".join(util.common_gn_args()) + "'"
util.run(cmd, "Preparing for build...", options)

if not options.full and not options.testsonly:
  test_targets = ""
else:
  test_targets = " ".join(util.find_all_test_targets(options))
if options.testsonly:
  target = test_targets
else:
  target = "chrome chrome_sandbox " + test_targets
cmd = ("autoninja -C " + util.get_out_dir() + " " + target)
status_code = util.run(cmd, "Compiling, this may take a while...\n", options)
if status_code == 0:
  print("All done.")
else:
  print("Compilation failed, aborting.")
  if not options.verbose:
    print("Please use '-v' to see actual failures.")
sys.exit(status_code)
